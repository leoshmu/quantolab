<!doctype html>
<!-- paulirish.com/2008/conditional-stylesheets-vs-css-hacks-answer-neither/ -->
<!--[if lt IE 7]> <html class="no-js ie6 oldie" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js ie7 oldie" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js ie8 oldie" lang="en"> <![endif]-->
<!-- Consider adding an manifest.appcache: h5bp.com/d/Offline -->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en"> <!--<![endif]-->
<head>
  <meta charset="utf-8">

  <!-- Use the .htaccess and remove these lines to avoid edge case issues.
       More info: h5bp.com/b/378 -->
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

  <title></title>
  <meta name="description" content="">
  <meta name="author" content="">

  <!-- Mobile viewport optimized: j.mp/bplateviewport -->
  <meta name="viewport" content="width=device-width,initial-scale=1">

  <!-- Place favicon.ico and apple-touch-icon.png in the root directory: mathiasbynens.be/notes/touch-icons -->

  <!-- CSS: implied media=all -->
  <!-- CSS concatenated and minified via ant build script-->
  <link rel="stylesheet" href="/css/style.css">

  	<style type="text/css" media="screen">
  	#container {background:url('/img/darkdenim3.png') repeat; padding-bottom:12px; min-width:820px; min-height:800px}
  		header {background: transparent url('/img/quantolabicon.png') no-repeat 0px 0px; margin:0px; height: 50px; padding-left:220px; line-height:2.9em; text-shadow: 0px -1px 1px rgba(0,0,0,0.8);}
  
    #analysis-container {
        border-radius:12px;
        margin-left:20px;
        margin-right:20px;
        min-width:800px;
        min-height:980px;
        position:relative;

        background:url('/img/45degreee_fabric.png');
    }
    #image-preview-container{
        width:720px;
        height:150px;
        border:solid;
        border-radius:5px;
        position:absolute;
        margin-left:240px;
        margin-top:23px;  
        margin-right:250px;      
        
    }
    #image-analysis-progress{
        width:200px;
        height:580px;
        margin-top:220px;
        margin-left:15px;
        border:solid;
        border-radius:5px;
        position:absolute;
    }
    #image-analysis-container{
        margin-left:240px;
        margin-right:140px;
        margin-top:220px;
        width:720px;
        height:680px;

        position:absolute;      
    }
    #image-meta {
        width :100%;
        height:50px;
    }
/*    .meta-box {
        width: 120px;
        border:solid;
        border-radius:5px;
        height:30px;
        margin:5px;
        display:inline-block;
    }
    */
    .pref-label {
        height: 15px;
        display:inline-block;
        margin-top:7px;
        margin-left:5px;
    }
    
    #image-view {
        width : 100%;
        height : 576px;
        border:solid 5px #938DA4;
        border-radius:10px;
    }
    #image-view img{
        width:100%;
        padding-top:2px;
    }
    
    #image-view canvas {
        position:absolute;
    }
    
 /*   #e-wave-analysis-button{
        width: 120px;
        height:30px;
        margin:5px;
        margin-top:-15px;
        padding:5px;
        text-align:center;
    }
*/
    .cssbutton, .meta-box {
    	-moz-box-shadow:inset 0px 1px 0px 0px #e8e8e8;
    	-webkit-box-shadow:inset 0px 1px 0px 0px #e8e8e8;
    	box-shadow:inset 0px 1px 0px 0px #e8e8e8;
    	background:-webkit-gradient( linear, left top, left bottom, color-stop(0.05, #ededed), color-stop(1, #bdc4a8) );
    	background:-moz-linear-gradient( center top, #ededed 5%, #bdc4a8 100% );
    	filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ededed', endColorstr='#bdc4a8');
    	background-color:#ededed;
    	-moz-border-radius:6px;
    	-webkit-border-radius:6px;
    	border-radius:6px;
    	border:1px solid #dcdcdc;
    	display:inline-block;
    	color:#120f10;
    	font-family:arial;
    	font-size:15px;
    	font-weight:bold;
    	padding:6px 24px;
    	text-decoration:none;
    	text-shadow:1px 1px 0px #ffffff;
    }.cssbutton, .meta-box:hover {
    	background:-webkit-gradient( linear, left top, left bottom, color-stop(0.05, #bdc4a8), color-stop(1, #ededed) );
    	background:-moz-linear-gradient( center top, #bdc4a8 5%, #ededed 100% );
    	filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#bdc4a8', endColorstr='#ededed');
    	background-color:#bdc4a8;
    }.cssbutton, .meta-box:active {
    	position:relative;
    	top:1px;
    }
    /* This imageless css button was generated by CSSButtonGenerator.com */


    .image-preview{
        border:solid;
        width:150px;
        height:120px;
        border-radius:5px;
    }
    .pref-button{
        background:url('img/prefButton.png');
        height:20px;
        display:inline-block;
        margin-left:2px;
        width:20px;
        vertical-align:top;
        margin-top:4px;
    }
    .active-image{
        border:solid 7px #E3EBAA;
    }
    #image-list{
        position:relative;
        display:inline-block;


    }
    #image-list ul {
        width:640px;
        height:144px;
        overflow-x:scroll;
white-space: nowrap;
margin-top:6px;
margin-bottom:10px;

    }
    #image-list li {
        height:120px;
        display: inline-block;
    }
    #image-list img {
        height: 100%;

    }
    
    #image-analysis-progress h3 {
        text-align:center;
    }

    #image-analysis-progress li {
        color:#6E6E6E;
        text-align:left;
        margin-left:-34px;
        margin-top:5px;
        list-style-type:none;
        font-size:11pt;
        
    }
    .image-progress-active {
        font-weight:bold;
        background:#E3EBAA;
    }
    .image-progress-analyzed {
        
    }
    #image-view-get-started {
        font-size: 30pt;
        text-align:center;
        padding:80px;
        background:#9EB7E5;
        margin:150px;
    }
    /* fix for lost scroll bars in mac

    */
    ::-webkit-scrollbar {
        width: 2px;
    }

    ::-webkit-scrollbar-thumb {
        border-radius: 1px;
        background: rgba(0,0,0,0.5);
    }
    #pdf-data{
        width:120px;
        height:50px;
        border:solid;
        background:green;
        position:absolute;
        display:block;
    }
  	</style>
  <!-- end CSS-->

  <!-- More ideas for your <head> here: h5bp.com/d/head-Tips -->

  <!-- All JavaScript at the bottom, except for Modernizr / Respond.
       Modernizr enables HTML5 elements & feature detects; Respond is a polyfill for min/max-width CSS3 Media Queries
       For optimal performance, use a custom Modernizr build: www.modernizr.com/download/ -->
  <script src="js/libs/modernizr-2.0.6.min.js"></script>
<script type="text/template" charset="utf-8" id="image-preview-template">
    <ul>
        <% _.each(imageList, function(image){
            %>
            <li class="image-preview"><img src="<%= image.src%>"/></li>
        <%});%>
    </ul>
</script>

<script type="text/template" charset="utf-8" id="image-analysis-progress-template">
    <h3>Image List</h3>
    <ul>
        <% _.each(imageList, function(image){
            %>
            <li><%= (image.src).split("/")[(image.src).split("/").length-1]%></li>
        <%});%>
    </ul>
</script>

</head>

<body>
    <div id="container">
        <header>
        </header>

        <div id="analysis-container">
            <div id="image-preview-container">
                <div id="image-list">

                </div>
            </div>
            <div id="image-analysis-progress">
            </div>
            <div id="image-analysis-container">
                <div id ="image-meta" style="display:none">
                    <div class="meta-box">
                        <div class="pref-button" id = "set_TSR"></div>
                        
                        <div class="pref-label">TSR: px/s</div>

                    </div>
                    <div class="meta-box">
                        <div class="pref-button" id="set_VSR"></div>
                        
                        <div class="pref-label">VSR: px/s</div>

                    </div>

                    <div class="meta-box">
                        <div class="pref-button" id="e-wave-analysis-button"></div>
                        
                        <div class="pref-label">E-wave</div>

                    </div>
                    
                </div>
                <div id="image-view">

                        <div id="image-view-get-started">Pick an Image to Get Started!</div>
                        <canvas id="canvasTSR"></canvas>
                        <canvas id="canvasVSR"></canvas>                            
                        <canvas id="canvasHR"></canvas>
                        <canvas id="canvasEwaveTriangle"></canvas>                                                        
                        <canvas id="canvasEwavePDF"></canvas>                                                        
                        <canvas id="canvasimg"></canvas>

                </div>
            </div> 
        </div>

        <footer>
        </footer>
    </div>
  <!-- JavaScript at the bottom for fast page loading -->

  <!-- Grab Google CDN's jQuery, with a protocol relative URL; fall back to local if offline -->
	<script src="//ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js"></script>
	<script>window.jQuery || document.write('<script src="js/libs/jquery-1.6.2.min.js"><\/script>')</script>
  <!-- Don't forget underscore -->
	<script src="js/libs/underscore.js"></script>
  <!-- scripts concatenated and minified via ant build script-->

	<script defer src="js/plugins.js"></script>

    <script type="text/javascript" charset="utf-8">
        var applicationData = {
                            imageList:[
                                {
                                    src:"images/samplePatientData/wave01.jpg",
                                    tsrStart:"",
                                    tsrEnd:"",
                                    tsr:"",
                                    vsr:"", 
                                    eStartX:"",
                                    ePeakX:"",
                                    ePeakY:"",
                                    eEndX:""
                                },
                                {
                                    src:"images/samplePatientData/wave02.png",                                
                                    tsrStart:"",
                                    tsrEnd:"",
                                    tsr:"",
                                    vsr:"",
                                    eStartX:"",
                                    ePeakX:"",
                                    ePeakY:"",
                                    eEndX:""
                                },
                                {
                                    src:"images/samplePatientData/wave03.jpg",                                
                                    tsrStart:"",
                                    tsrEnd:"",
                                    tsr:"",
                                    vsr:"",
                                    eStartX:"",
                                    ePeakX:"",
                                    ePeakY:"",
                                    eEndX:""
                                },
                                {
                                    src:"images/samplePatientData/wave04.jpg",                                
                                    tsrStart:"",
                                    tsrEnd:"",
                                    tsr:"",
                                    vsr:"",
                                    eStartX:"",
                                    ePeakX:"",
                                    ePeakY:"",
                                    eEndX:""
                                },
                                {
                                    src:"images/samplePatientData/wave05.jpg",
                                    tsr:"",
                                    vsr:"",
                                    eStartX:"",
                                    ePeakX:"",
                                    ePeakY:"",
                                    eEndX:""

                                },
                                {
                                    src:"images/samplePatientData/wave01.jpg",                                
                                    tsrStart:"",
                                    tsrEnd:"",
                                    tsr:"",
                                    vsr:"",
                                    eStartX:"",
                                    ePeakX:"",
                                    ePeakY:"",
                                    eEndX:""
                                },
                                {
                                    src:"images/samplePatientData/wave01.jpg",                                
                                    tsrStart:"",
                                    tsrEnd:"",
                                    tsr:"",
                                    vsr:"",
                                    eStartX:"",
                                    ePeakX:"",
                                    ePeakY:"",
                                    eEndX:""
                                }
                                                        
                            ]
                            };
        $(document).ready(function(){
           var imagePreviewTemplate = _.template($('#image-preview-template').html());
            $('#image-list').html(imagePreviewTemplate(applicationData));
            var imageProgressTemplate = _.template($('#image-analysis-progress-template').html());
             $('#image-analysis-progress').html(imageProgressTemplate(applicationData));
            
            $('#image-list').delegate('img', 'click', function(){
                $('#image-view').fadeOut().fadeIn();
                $('#image-meta').show();
                $('#image-view-get-started').hide();
                //clears the canvas
                canvasImg.width = canvasImg.width;

                // get the current image index and save it as data
                imgIndex = $('#image-list li').index($(this).parent());
                
                $('#image-view').data('currentImgIndex', imgIndex);
                currentSrc = applicationData.imageList[imgIndex].src;
                
                var myImage = new Image();
                myImage.onload = function() {
                    canvasImg.getContext("2d").drawImage(myImage, 0, 0, canvasWidth, canvasHeight);
                }
                myImage.src = currentSrc;
                // grab the image pixel data for analysis
                var imgData = canvasImg.getContext("2d").getImageData(0,0,canvasWidth, canvasHeight);
                // save the image data to the application data
                applicationData.imageList[imgIndex].imgData = imgData;
                //set wave data
                
                
                set_draw_data_for_image(imgIndex);
                
            });
            
            $('#image-analysis-progress ul').delegate('li', 'click', function(){
                $('#image-view').fadeOut().fadeIn();
                $('#image-meta').show();
                $('#image-view-get-started').hide();
                //clears the canvas
                canvasImg.width = canvasImg.width;

                // get the current image index and save it as data
                imgIndex = $('#image-analysis-progress li').index($(this));
                
                $('#image-view').data('currentImgIndex', imgIndex);
                currentSrc = applicationData.imageList[imgIndex].src;
                
                var myImage = new Image();
                myImage.onload = function() {
                    canvasImg.getContext("2d").drawImage(myImage, 0, 0, canvasWidth, canvasHeight);
                }
                myImage.src = currentSrc;
                // grab the image pixel data for analysis
                var imgData = canvasImg.getContext("2d").getImageData(0,0,canvasWidth, canvasHeight);
                // save the image data to the application data
                applicationData.imageList[imgIndex].imgData = imgData;
                //set wave data
                
                set_draw_data_for_image(imgIndex);
                
            });
            
            //var canvasImageDiv = $('#canvasImage')[0];
			var canvasWidth = 720;
			var canvasHeight = 576;
            
			canvasImg = $('#canvasimg')[0];			
			canvasImg.setAttribute('width', canvasWidth);
			canvasImg.setAttribute('height', canvasHeight);

			canvasTSR = $('#canvasTSR')[0];			
			canvasTSR.setAttribute('width', canvasWidth);
			canvasTSR.setAttribute('height', canvasHeight);
			canvasVSR = $('#canvasVSR')[0];			
			canvasVSR.setAttribute('width', canvasWidth);
			canvasVSR.setAttribute('height', canvasHeight);
			canvasEwaveTriangle = $('#canvasEwaveTriangle')[0];			
			canvasEwaveTriangle.setAttribute('width', canvasWidth);
			canvasEwaveTriangle.setAttribute('height', canvasHeight);
			canvasEwavePDF = $('#canvasEwavePDF')[0];			
			canvasEwavePDF.setAttribute('width', canvasWidth);
			canvasEwavePDF.setAttribute('height', canvasHeight);
			
            
            
            // Handle TSR
            $('#set_TSR').click(function(){
                // lookup current image index

                var canvasLeftOffset= $('#image-view').offset().left;
    			
                var currentImgIndex = $('#image-view').data('currentImgIndex');                                
    			// get VSR context
    			canvasTSR = $('#canvasTSR')[0];
		        var contextTSR = canvasTSR.getContext("2d");
    			
    			var setTSR = true;
    			//follow the mouse and draw vertical line along the image
                bringToFront('#canvasTSR');
                var clickTracker = [];                                
    			$('#canvasTSR').mousemove(function(e){                    
    			  if(setTSR){
    			    currentX = e.pageX - canvasLeftOffset;
    			    canvasTSR.width= canvasVSR.width;
                    // start drawing
                    contextTSR.strokeStyle = "#df4b26";
        			contextTSR.lineJoin = "round";    		        
                    graphLinesArray(contextTSR, clickTracker);
    		        drawLine(contextTSR, currentX, 0, currentX, canvasTSR.height);
                    writeTSR(applicationData.imageList[imgIndex].tsr);
    			  }
    			});
    			$('#canvasTSR').mousedown(function(e){
                    if (setTSR){
                        clickTracker.push({"x1":currentX, "y1":0, "x2":currentX, "y2":canvasTSR.height});
                        if(clickTracker.length>1){
                            setTSR = false;
                            applicationData.imageList[currentImgIndex].tsrStart = clickTracker[0].x1;
                            applicationData.imageList[currentImgIndex].tsrEnd = clickTracker[1].x2;                        applicationData.imageList[currentImgIndex].tsr=Math.abs(applicationData.imageList[currentImgIndex].tsrEnd-applicationData.imageList[currentImgIndex].tsrStart);
                            writeTSR(applicationData.imageList[currentImgIndex].tsr);
                            drawTSR(currentImgIndex);                            
                        }
                    }    			        
    			});
    			                
            });
            
            

            // Handle VSR
            $('#set_VSR').click(function(){
                var canvasTopOffset = $('#image-view').offset().top;
                
                // lookup current image index
                var currentImgIndex = $('#image-view').data('currentImgIndex');                                
    			// get VSR context
    			canvasVSR = $('#canvasVSR')[0];
		        var contextVSR = canvasVSR.getContext("2d");
    			
    			var setVSR = true;
    			//follow the mouse and draw vertical line along the image
                bringToFront('#canvasVSR');
                var clickTracker = [];                                
    			$('#canvasVSR').mousemove(function(e){                    
    			  if(setVSR){
    			    currentY = e.pageY - canvasTopOffset;
    			    canvasVSR.width= canvasVSR.width;
                    // start drawing
                    contextVSR.strokeStyle = "#df4b26";
        			contextVSR.lineJoin = "round";    		        
                    graphLinesArray(contextVSR, clickTracker);
    		        drawLine(contextVSR, 0, currentY, canvasVSR.width, currentY);
                    writeVSR(applicationData.imageList[imgIndex].vsr);
    			  }
    			});
    			$('#canvasVSR').mousedown(function(e){
                    if (setVSR){
                        clickTracker.push({"x1":0, "y1":currentY, "x2":canvasVSR.width, "y2":currentY});
                        if(clickTracker.length>1){
                            setVSR = false;
                            applicationData.imageList[currentImgIndex].vsrStart = clickTracker[0].y1;
                            applicationData.imageList[currentImgIndex].vsrEnd = clickTracker[1].y2;                        applicationData.imageList[currentImgIndex].vsr=Math.abs(applicationData.imageList[currentImgIndex].vsrEnd-applicationData.imageList[currentImgIndex].vsrStart);
                            writeVSR(applicationData.imageList[currentImgIndex].vsr);
                            drawVSR(currentImgIndex);                            
                        }

                    }    			        
    			});
    			                
            });
        });

        // handle E-wave
        $('#e-wave-analysis-button').click(function(){
            var canvasTopOffset = $('#image-view').offset().top;
            var canvasLeftOffset= $('#image-view').offset().left;
            
            
            // lookup current image index
            var currentImgIndex = $('#image-view').data('currentImgIndex');                                
            // get triangle and wave context
			var zeroYLevel = applicationData.imageList[currentImgIndex].vsrStart;
			canvasEwaveTriangle = $('#canvasEwaveTriangle')[0];
			canvasEwavePDF = $('#canvasEwavePDF')[0];
	        var contextEwaveTriangle = canvasEwaveTriangle.getContext("2d");
	        var contextEwavePDF = canvasEwavePDF.getContext("2d");
	        
	        var getEwavePoints = true;
	        bringToFront('#canvasEwaveTriangle');
	        var clickTracker = [];
	        var waveTracker = {"eStartX":"", "eEndX":"", "ePeakX":"", "ePeakY":""};

	        $('#canvasEwaveTriangle').mousemove(function(e){                    
            
			    if (getEwavePoints){
    			    currentX = e.pageX - canvasLeftOffset;
    			    currentY = e.pageY - canvasTopOffset;
    			    console.log(currentX, currentY, waveTracker, clickTracker);
    			    // start drawing
    			    canvasEwaveTriangle.width=canvasEwaveTriangle.width;
 		            contextEwaveTriangle.strokeStyle = "#38C936";
        			contextEwaveTriangle.lineJoin = "round"; 
        			contextEwaveTriangle.lineWidth = 4;
                    if (clickTracker.length>0){
                        $('#canvasEwaveTriangle').css('cursor', 'default');
                        clickTracker[clickTracker.length-1].x2=currentX;
                        if(waveTracker.eStartX!=""){
                            contextEwaveTriangle.lineWidth = 0.5;
                			console.log('draw pdf curve');
                            drawPDFCurve (contextEwavePDF, waveTracker.eStartX, currentX, waveTracker.ePeakX, waveTracker.ePeakY, currentImgIndex);
                			graphLinesArray(contextEwaveTriangle, clickTracker);                            
                            
                        }
                        else
                        {
                            graphLinesArray(contextEwaveTriangle, clickTracker);                            
                        }
                            
                    }
                    else{
                        $('#canvasEwaveTriangle').css('cursor', 'none');
                        contextEwaveTriangle.fillStyle = 'green';
                        drawCircle(contextEwaveTriangle, currentX, currentY, 5);
                    }
                    
                }
                
            });
            
	        $('#canvasEwaveTriangle').mousedown(function(e){                    
                if (getEwavePoints){
                    if(waveTracker.ePeakX==""){
                        waveTracker.ePeakX = currentX;
                        waveTracker.ePeakY= currentY;  
                        clickTracker.push({"x1":currentX, "y1":currentY, "x2":"", "y2":zeroYLevel});
                    }
                    else{
                        if(waveTracker.eStartX==""){
                            contextEwaveTriangle.lineWidth = 0.5;   		        

                            waveTracker.eStartX = currentX;
                            clickTracker.push({"x1":waveTracker.ePeakX, "y1":waveTracker.ePeakY, "x2":"", "y2":zeroYLevel});                
                        }
                        else{
                            if(waveTracker.eEndX==""){
                                waveTracker.eEndX = currentX;
                                getEwavePoints = false;
                                applicationData.imageList[currentImgIndex].eStartX = waveTracker.eStartX;
                                applicationData.imageList[currentImgIndex].ePeakX = waveTracker.ePeakX;
                                applicationData.imageList[currentImgIndex].ePeakY = waveTracker.ePeakY;                                
                                applicationData.imageList[currentImgIndex].eEndX = waveTracker.eEndX;
                            }
                        }
                    }
                }
                else{
                    set_draw_data_for_image(currentImgIndex);
                }
            });

        });
        
        
		function invertOverDamped(ATDTRatio){
			var y = 0.0005;
			var newError = Math.abs(ATDTRatio - 1- 2*y*Math.exp(-y*Math.acos(y)/Math.sqrt(1-Math.pow(y,2))));
			do {
				var lastError = newError;
				y +=0.0005;
				var matchATOverDT = 1- 2*y*Math.exp(-y*Math.acos(y)/Math.sqrt(1-Math.pow(y,2)));				
				newError = Math.abs(matchATOverDT - ATDTRatio);			
			}
			while  (newError < lastError && (y < 1))
			return y;			
		}

		function underDampedCriticalRegion(AT, DT, Epeak){

           var matchValue = (DT-AT)/(2*DT);
	       var y = 0.0005;
	       var newError = Math.abs(matchValue - y*Math.exp(-y*Math.acos(y)/Math.sqrt(1-Math.pow(y,2))));
	       	do {
   				var lastError = newError;
   				y +=0.0005;
   				var newMatchValue = y*Math.exp(-y*Math.acos(y)/Math.sqrt(1-Math.pow(y,2)));				
   				newError = Math.abs(matchValue - newMatchValue);			
   			}
           	while  (newError < lastError && (y < 1))

            var found_y = y;
            var inverse_y=1/found_y;
            var found_k=Math.pow(((1/AT)*Math.acos(found_y)/Math.sqrt(1-(Math.pow(found_y,2)))),2);
            var found_c=found_y*2*Math.sqrt(found_k);
            var found_xo=((Epeak/Math.sqrt(found_k))*(Math.exp(Math.atan(Math.sqrt(Math.pow(inverse_y,2)-1))/Math.sqrt(Math.pow(inverse_y,2)-1))));
            return [found_c, found_k, found_xo]
		}
		function underDampedRegion(AT, DT, Epeak){
		    var y = Math.cos(Math.PI*AT/(AT+DT));
			var pdfK = 1/Math.pow((AT + DT),2)*Math.PI*Math.PI/(1-Math.pow(y,2));
			var pdfC = 2*y*Math.sqrt(pdfK);
			var pdfXo = (Epeak) / Math.sqrt(pdfK) * Math.exp(y*Math.acos(y)/Math.sqrt(1-Math.pow(y,2)));
			return [pdfC, pdfK, pdfXo];
		}
		function drawPDFCurve (canvasContext, startX, endX, peakX, peakY, imgIndex){
			
			var TSR = applicationData.imageList[imgIndex].tsr;
			var VSR  = applicationData.imageList[imgIndex].vsr;
			var zeroLevel = applicationData.imageList[imgIndex].vsrStart;
			var pdfCanvas = $('#canvasEwavePDF')[0];
			pdfCanvas.width=pdfCanvas.width; //clear the canvas
			canvasContext.lineWidth = 4;
			var AT = (peakX-startX)/TSR;
			var DT = (endX-peakX)/TSR;
			var Epeak = (zeroLevel-peakY)/VSR;
			if (DT/AT > 2.64){
			    // underdamped with inflection case
			    var foundPDF = underDampedCriticalRegion(AT, DT, Epeak);
			    canvasContext.strokeStyle = "orange";
			}
			if (DT/AT<=2.64){
			    //fully underdamped case
			    var foundPDF = underDampedRegion(AT, DT, Epeak);
			    canvasContext.strokeStyle = "green";
			}
            console.log('foundPDF', foundPDF);
			var pdfK = foundPDF[1];
			var pdfC = foundPDF[0];
			var pdfXo = foundPDF[2];
			$('#ewave_c').html('c: '+pdfC);
			$('#ewave_k').html('k: '+pdfK);
			$('#ewave_xo').html('xo: '+pdfXo);
			var y = 1/2 * pdfC/Math.sqrt(pdfK);
			var pdfw = Math.sqrt(pdfK)*Math.sqrt(1-Math.pow(y,2));


			//var pdfOverY = invertOverDamped(AT/DT);


			var curve  = new Array();

			
			canvasContext.beginPath();
			canvasContext.moveTo(startX, curveY);
			console.log(endX,startX,'end - start');
			for (i=0; i<endX-startX; i++){
				// calculate something for each pixel between start and end
				var curveX = startX+i;
				var convertedTime = i/TSR;				
				var pdfVel = pdfK*pdfXo/pdfw *Math.exp(-pdfC/2*convertedTime)*Math.sin(pdfw*convertedTime);
				var curveY = zeroLevel-pdfVel*VSR; // or some other function of X
				curve.push([curveX, curveY]);

				canvasContext.lineTo(curveX, curveY);
				canvasContext.moveTo(curveX, curveY);
				canvasContext.stroke();
			}
			canvasContext.closePath();
//			console.log(curve);
		}
        
        
        
        
        
        
        function writeTSR(tsrString){
            if(tsrString){
                $('#set_TSR').siblings().html('TSR: '+tsrString+'px/s');
            }        
            else
            {
                $('#set_TSR').siblings().html('TSR: '+"??"+'px/s')
            }        
        }

        function writeVSR(vsrString){
            if(vsrString){
                $('#set_VSR').siblings().html('VSR: '+vsrString+'px/s');
            }
            else
            {
                $('#set_VSR').siblings().html('VSR: '+"??"+'px/s')
            }        
        }
        function set_draw_data_for_image(imgIndex){
            // write and draw TSR
            writeTSR(applicationData.imageList[imgIndex].tsr);
            drawTSR(imgIndex);
            
            writeVSR(applicationData.imageList[imgIndex].vsr);
            drawVSR(imgIndex);
    		canvasEwaveTriangle = $('#canvasEwaveTriangle')[0];
	        canvasEwaveTriangle.width = canvasEwaveTriangle.width;
            		
            		canvasEwavePDF = $('#canvasEwavePDF')[0];
        	        canvasEwavePDF.width = canvasEwavePDF.width;
        	        var contextEwavePDF = canvasEwavePDF.getContext("2d");
            if (applicationData.imageList[imgIndex].eStartX!=""){
                drawPDFCurve(contextEwavePDF, applicationData.imageList[imgIndex].eStartX, applicationData.imageList[imgIndex].eEndX, applicationData.imageList[imgIndex].ePeakX, applicationData.imageList[imgIndex].ePeakY, imgIndex);
        }
        console.log(applicationData.imageList[imgIndex].eStartX);
            bringCanvasBack('#canvasimg');
            
            $('#image-analysis-progress li').removeClass('image-progress-active');
            $('#image-analysis-progress li').eq(imgIndex).addClass('image-progress-active');
            $('.image-preview').removeClass('active-image');
            $('.image-preview').eq(imgIndex).addClass('active-image');            
        }
        
		function drawTSR(imgIndex){
		    canvasTSR = $('#canvasTSR')[0];
		    canvasWidth = canvasTSR.width;
		    canvasHeight =canvasTSR.height;			
			var drawingContext = canvasTSR.getContext("2d");	        
		    // clear the canvas
		    canvasTSR.width= canvasTSR.width;
            drawingContext.clearRect(0,0, canvasWidth, canvasHeight);
            // start drawing
			drawingContext.strokeStyle = "#df4b26";
			drawingContext.lineJoin = "round";
			drawingContext.lineWidth = 0.5;
			
            var x1 = applicationData.imageList[imgIndex].tsrStart;
            var x2 = applicationData.imageList[imgIndex].tsrEnd;
			if (x1){
			    drawLine(drawingContext, x1, 0, x1, canvasHeight);
			}
			if (x2){
			    drawLine(drawingContext, x2, 0, x2, canvasHeight);
			}
        }
		function drawVSR(imgIndex){
		    canvasVSR = $('#canvasVSR')[0];
		    canvasWidth = canvasVSR.width;
		    canvasHeight =canvasVSR.height;			
			var drawingContext = canvasVSR.getContext("2d");	        
		    // clear the canvas
		    canvasVSR.width= canvasVSR.width;
            drawingContext.clearRect(0,0, canvasWidth, canvasHeight);
            // start drawing
			drawingContext.strokeStyle = "#df4b26";
			drawingContext.lineJoin = "round";
			drawingContext.lineWidth = 0.5;
			
            var y1 = applicationData.imageList[imgIndex].vsrStart;
            var y2 = applicationData.imageList[imgIndex].vsrEnd;
			if (y1){
			    drawLine(drawingContext, 0, y1, canvasWidth, y1);
			}
			if (y2){
			    drawLine(drawingContext, 0, y2, canvasWidth, y2);
			}
        }
        function graphLinesArray(drawingContext, linesArray){
            for(var i=0; i<linesArray.length; i++){
                lineArray = linesArray[i];
                drawLine(drawingContext, lineArray.x1, lineArray.y1, lineArray.x2, lineArray.y2);
            }
        }
        function drawLine(drawingContext, x1, y1, x2, y2){
            console.log(x1, y1, x2, y2);
			drawingContext.beginPath();
			drawingContext.moveTo(x1, y1);
			drawingContext.lineTo(x2, y2);
			drawingContext.closePath();
			drawingContext.stroke();
            return
        }
        function drawCircle(drawingContext, x, y, radius){
            drawingContext.beginPath();
            drawingContext.arc(x, y, radius, 0, Math.PI*2, true); 
            drawingContext.closePath();
            drawingContext.fill();
        }
        function bringToFront(canvasString){
            $('canvas').each(function(index){
                $(this).css('zIndex', 10);
            });
            $(canvasString).css('zIndex', 9999);
            $('#canvasimg').css('zIndex',9);
        }
        function bringCanvasBack(canvasString){
            $('canvas').each(function(index){
                $(this).css('zIndex', 10);
            });
            $(canvasString).css('zIndex', 9);
        }
        
    </script>
  <!-- end scripts-->


  <!-- Prompt IE 6 users to install Chrome Frame. Remove this if you want to support IE 6.
       chromium.org/developers/how-tos/chrome-frame-getting-started -->
  <!--[if lt IE 7 ]>
    <script src="//ajax.googleapis.com/ajax/libs/chrome-frame/1.0.3/CFInstall.min.js"></script>
    <script>window.attachEvent('onload',function(){CFInstall.check({mode:'overlay'})})</script>
  <![endif]-->
  
</body>
</html>
